function invariant(t,i){if(!t)throw new Error(i)}function withDefault(t,i){return void 0!==t&&null!==t?t:i}class Spring{constructor(t={}){this._listeners=[],this._currentAnimationStep=0,this._currentTime=0,this._springTime=0,this._currentValue=0,this._currentVelocity=0,this._isAnimating=!1,this._oscillationVelocityPairs=[],this._config={fromValue:withDefault(t.fromValue,0),toValue:withDefault(t.toValue,1),stiffness:withDefault(t.stiffness,100),damping:withDefault(t.damping,10),mass:withDefault(t.mass,1),initialVelocity:withDefault(t.initialVelocity,0),overshootClamping:withDefault(t.overshootClamping,!1),allowsOverdamping:withDefault(t.allowsOverdamping,!1),restVelocityThreshold:withDefault(t.restVelocityThreshold,.001),restDisplacementThreshold:withDefault(t.restDisplacementThreshold,.001)},this._currentValue=this._config.fromValue,this._currentVelocity=this._config.initialVelocity}start(){const{fromValue:t,toValue:i,initialVelocity:e}=this._config;return t===i&&0===e||(this._reset(),this._isAnimating=!0,this._currentAnimationStep||(this._notifyListeners("onStart"),this._currentAnimationStep=requestAnimationFrame(t=>{this._step(Date.now())}))),this}stop(){return this._isAnimating?(this._isAnimating=!1,this._notifyListeners("onStop"),this._currentAnimationStep&&(cancelAnimationFrame(this._currentAnimationStep),this._currentAnimationStep=0),this):this}get currentValue(){return this._currentValue}get currentVelocity(){return this._currentVelocity}get isAtRest(){return this._isSpringAtRest()}get isAnimating(){return this._isAnimating}updateConfig(t){this._advanceSpringToTime(Date.now());const i={fromValue:this._currentValue,initialVelocity:this._currentVelocity};return this._config=Object.assign({},this._config,i,t),this._reset(),this}onStart(t){return this._listeners.push({onStart:t}),this}onUpdate(t){return this._listeners.push({onUpdate:t}),this}onStop(t){return this._listeners.push({onStop:t}),this}removeListener(t){return this._listeners=this._listeners.reduce((i,e)=>{return-1!==Object.values(e).indexOf(t)||i.push(e),i},[]),this}removeAllListeners(){return this._listeners=[],this}_reset(){this._currentTime=Date.now(),this._springTime=0,this._currentValue=this._config.fromValue,this._currentVelocity=this._config.initialVelocity}_notifyListeners(t){this._listeners.forEach(i=>{const e=i[t];"function"==typeof e&&e(this)})}_step(t){this._advanceSpringToTime(t,!0),this._isAnimating&&(this._currentAnimationStep=requestAnimationFrame(t=>this._step(Date.now())))}_advanceSpringToTime(t,i=!1){if(!this._isAnimating)return;let e=t-this._currentTime;e>Spring.MAX_DELTA_TIME_MS&&(e=Spring.MAX_DELTA_TIME_MS),this._springTime+=e;const s=this._config.damping,n=this._config.mass,r=this._config.stiffness,h=this._config.fromValue,a=this._config.toValue,o=-this._config.initialVelocity;invariant(n>0,"Mass value must be greater than 0"),invariant(r>0,"Stiffness value must be greater than 0"),invariant(s>0,"Damping value must be greater than 0");let l=s/(2*Math.sqrt(r*n));const u=Math.sqrt(r/n)/1e3,c=u*Math.sqrt(1-l*l),_=u*Math.sqrt(l*l-1),f=a-h;l>1&&!this._config.allowsOverdamping&&(l=1);let g=0,m=0;const p=this._springTime;if(l<1){const t=Math.exp(-l*u*p);g=a-t*((o+l*u*f)/c*Math.sin(c*p)+f*Math.cos(c*p)),m=l*u*t*(Math.sin(c*p)*(o+l*u*f)/c+f*Math.cos(c*p))-t*(Math.cos(c*p)*(o+l*u*f)-c*f*Math.sin(c*p))}else if(1===l){const t=Math.exp(-u*p);g=a-t*(f+(o+u*f)*p),m=t*(o*(p*u-1)+p*f*(u*u))}else{const t=Math.exp(-l*u*p);g=a-t*((o+l*u*f)*Math.sinh(_*p)+_*f*Math.cosh(_*p))/_,m=t*l*u*(Math.sinh(_*p)*(o+l*u*f)+f*_*Math.cosh(_*p))/_-t*(_*Math.cosh(_*p)*(o+l*u*f)+_*_*f*Math.sinh(_*p))/_}return this._currentTime=t,this._currentValue=g,this._currentVelocity=m,i&&(this._notifyListeners("onUpdate"),this._isAnimating)&&(this._isSpringOvershooting()||this._isSpringAtRest())?(0!==r&&(this._currentValue=a,this._currentVelocity=0,this._notifyListeners("onUpdate")),void this.stop()):void 0}_isSpringOvershooting(){const{stiffness:t,fromValue:i,toValue:e,overshootClamping:s}=this._config;let n=!1;return s&&0!==t&&(n=i<e?this._currentValue>e:this._currentValue<e),n}_isSpringAtRest(){const{stiffness:t,toValue:i,restDisplacementThreshold:e,restVelocityThreshold:s}=this._config,n=Math.abs(this._currentVelocity)<=s;return 0!==t&&Math.abs(i-this._currentValue)<=e&&n}}Spring.MAX_DELTA_TIME_MS=1/60*1e3*4;export{Spring};
//# sourceMappingURL=wobble.es.min.js.map
