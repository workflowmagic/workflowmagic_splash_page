{"version":3,"file":"wobble.browser.min.js","sources":["../node_modules/tslib/tslib.es6.js","../src/utils.ts","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n","/**\n *  @license\n *  Copyright 2017 Adam Miskiewicz\n *\n *  Use of this source code is governed by a MIT-style license that can be found\n *  in the LICENSE file or at https://opensource.org/licenses/MIT.\n */\n\nexport function invariant(condition: boolean, message: string): void {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nexport function withDefault<X>(maybeValue: X | undefined, defaultValue: X): X {\n  return typeof maybeValue !== \"undefined\" && maybeValue !== null\n    ? (maybeValue as X)\n    : defaultValue;\n}\n","/**\n *  @license\n *  Copyright 2017 Adam Miskiewicz\n *\n *  Use of this source code is governed by a MIT-style license that can be found\n *  in the LICENSE file or at https://opensource.org/licenses/MIT.\n */\n\nimport { invariant, withDefault } from \"./utils\";\n\nexport interface SpringConfig {\n  fromValue: number; // Starting value of the animation.\n  toValue: number; // Ending value of the animation.\n  stiffness: number; // The spring stiffness coefficient.\n  damping: number; // Defines how the springâ€™s motion should be damped due to the forces of friction.\n  mass: number; // The mass of the object attached to the end of the spring.\n  initialVelocity: number; // The initial velocity (in units/ms) of the object attached to the spring.\n  allowsOverdamping: boolean; // Whether or not the spring allows \"overdamping\" (a damping ratio > 1). Defaults to false.\n  overshootClamping: boolean; // False when overshooting is allowed, true when it is not. Defaults to false.\n  restVelocityThreshold: number; // When spring's velocity is below `restVelocityThreshold`, it is at rest. Defaults to .001.\n  restDisplacementThreshold: number; // When the spring's displacement (current value) is below `restDisplacementThreshold`, it is at rest. Defaults to .001.\n}\n\nexport type PartialSpringConfig = Partial<SpringConfig>;\n\nexport type SpringListenerFn = (spring: Spring) => void;\nexport interface SpringListener {\n  onUpdate?: SpringListenerFn;\n  onStart?: SpringListenerFn;\n  onStop?: SpringListenerFn;\n}\n\n/**\n * Implements a spring physics simulation based on the equations behind\n * damped harmonic oscillators (https://en.wikipedia.org/wiki/Harmonic_oscillator#Damped_harmonic_oscillator).\n */\nexport class Spring {\n  static MAX_DELTA_TIME_MS = 1 / 60 * 1000 * 4; // advance 4 frames at max\n\n  _listeners: SpringListener[] = [];\n\n  private _config: SpringConfig;\n  private _currentAnimationStep: number = 0; // current requestAnimationFrame\n\n  private _currentTime: number = 0; // Current timestamp of animation in ms (real time)\n  private _springTime: number = 0; // Current time along the spring curve in ms (zero-based)\n\n  private _currentValue: number = 0; // the current value of the spring\n  private _currentVelocity: number = 0; // the current velocity of the spring\n  private _isAnimating: boolean = false;\n\n  private _oscillationVelocityPairs = [];\n\n  constructor(config: PartialSpringConfig = {}) {\n    this._config = {\n      fromValue: withDefault(config.fromValue, 0),\n      toValue: withDefault(config.toValue, 1),\n      stiffness: withDefault(config.stiffness, 100),\n      damping: withDefault(config.damping, 10),\n      mass: withDefault(config.mass, 1),\n      initialVelocity: withDefault(config.initialVelocity, 0),\n      overshootClamping: withDefault(config.overshootClamping, false),\n      allowsOverdamping: withDefault(config.allowsOverdamping, false),\n      restVelocityThreshold: withDefault(config.restVelocityThreshold, 0.001),\n      restDisplacementThreshold: withDefault(\n        config.restDisplacementThreshold,\n        0.001\n      )\n    };\n    this._currentValue = this._config.fromValue;\n    this._currentVelocity = this._config.initialVelocity;\n  }\n\n  /**\n   * If `fromValue` differs from `toValue`, or `initialVelocity` is non-zero,\n   * start the simulation and call the `onStart` listeners.\n   */\n  start(): this {\n    const { fromValue, toValue, initialVelocity } = this._config;\n\n    if (fromValue !== toValue || initialVelocity !== 0) {\n      this._reset();\n      this._isAnimating = true;\n\n      if (!this._currentAnimationStep) {\n        this._notifyListeners(\"onStart\");\n        this._currentAnimationStep = requestAnimationFrame((t: number) => {\n          this._step(Date.now());\n        });\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * If a simulation is in progress, stop it and call the `onStop` listeners.\n   */\n  stop(): this {\n    if (!this._isAnimating) {\n      return this;\n    }\n\n    this._isAnimating = false;\n    this._notifyListeners(\"onStop\");\n\n    if (this._currentAnimationStep) {\n      cancelAnimationFrame(this._currentAnimationStep);\n      this._currentAnimationStep = 0;\n    }\n\n    return this;\n  }\n\n  /**\n   * The spring's current position.\n   */\n  get currentValue(): number {\n    return this._currentValue;\n  }\n\n  /**\n   * The spring's current velocity in units / ms.\n   */\n  get currentVelocity(): number {\n    return this._currentVelocity; // give velocity in units/ms;\n  }\n\n  /**\n   * If the spring has reached its `toValue`, or if its velocity is below the\n   * `restVelocityThreshold`, it is considered at rest. If `stop()` is called\n   * during a simulation, both `isAnimating` and `isAtRest` will be false.\n   */\n  get isAtRest(): boolean {\n    return this._isSpringAtRest();\n  }\n\n  /**\n   * Whether or not the spring is currently emitting values.\n   *\n   * Note: this is distinct from whether or not it is at rest.\n   * See also `isAtRest`.\n   */\n  get isAnimating(): boolean {\n    return this._isAnimating;\n  }\n\n  /**\n   * Updates the spring config with the given values.  Values not explicitly\n   * supplied will be reused from the existing config.\n   */\n  updateConfig(updatedConfig: PartialSpringConfig): this {\n    // When we update the spring config, we reset the simulation to ensure the\n    // spring always moves the full distance between `fromValue` and `toValue`.\n    // To ensure that the simulation behaves correctly if those values aren't\n    // being changed in `updatedConfig`, we run the simulation with `_step()`\n    // and default `fromValue` and `initialVelocity` to their current values.\n\n    this._advanceSpringToTime(Date.now());\n\n    const baseConfig = {\n      fromValue: this._currentValue,\n      initialVelocity: this._currentVelocity\n    };\n\n    this._config = {\n      ...this._config,\n      ...baseConfig,\n      ...updatedConfig\n    };\n\n    this._reset();\n\n    return this;\n  }\n\n  /**\n   * The provided callback will be invoked when the simulation begins.\n   */\n  onStart(listener: SpringListenerFn): this {\n    this._listeners.push({ onStart: listener });\n    return this;\n  }\n\n  /**\n   * The provided callback will be invoked on each frame while the simulation is\n   * running.\n   */\n  onUpdate(listener: SpringListenerFn): this {\n    this._listeners.push({ onUpdate: listener });\n    return this;\n  }\n\n  /**\n   * The provided callback will be invoked when the simulation ends.\n   */\n  onStop(listener: SpringListenerFn): this {\n    this._listeners.push({ onStop: listener });\n    return this;\n  }\n\n  /**\n   * Remove a single listener from this spring.\n   */\n  removeListener(listenerFn: SpringListenerFn): this {\n    this._listeners = this._listeners.reduce(\n      (result, listener) => {\n        const foundListenerFn =\n          Object.values(listener).indexOf(listenerFn) !== -1;\n        if (!foundListenerFn) {\n          result.push(listener);\n        }\n        return result;\n      },\n      [] as SpringListener[]\n    );\n    return this;\n  }\n\n  /**\n   * Removes all listeners from this spring.\n   */\n  removeAllListeners(): this {\n    this._listeners = [];\n    return this;\n  }\n\n  private _reset() {\n    this._currentTime = Date.now();\n    this._springTime = 0.0;\n    this._currentValue = this._config.fromValue;\n    this._currentVelocity = this._config.initialVelocity;\n  }\n\n  private _notifyListeners(eventName: keyof SpringListener) {\n    this._listeners.forEach((listener: Partial<SpringListener>) => {\n      const maybeListenerFn = listener[eventName];\n      if (typeof maybeListenerFn === \"function\") {\n        maybeListenerFn(this);\n      }\n    });\n  }\n\n  /**\n   * `_step` is the main loop.  While the animation is running, it updates the\n   * current state once per frame, and schedules the next frame if the spring is\n   * not yet at rest.\n   */\n  private _step(timestamp: number) {\n    this._advanceSpringToTime(timestamp, true);\n\n    // check `_isAnimating`, in case `stop()` got called during\n    // `_advanceSpringToTime()`\n    if (this._isAnimating) {\n      this._currentAnimationStep = requestAnimationFrame((t: number) =>\n        this._step(Date.now())\n      );\n    }\n  }\n\n  private _advanceSpringToTime(\n    timestamp: number,\n    shouldNotifyListeners: boolean = false\n  ) {\n    // `_advanceSpringToTime` updates `_currentTime` and triggers the listeners.\n    // Because of these side effects, it's only safe to call when an animation\n    // is already in-progress.\n    if (!this._isAnimating) {\n      return;\n    }\n\n    let deltaTime = timestamp - this._currentTime;\n\n    // If for some reason we lost a lot of frames (e.g. process large payload or\n    // stopped in the debugger), we only advance by 4 frames worth of\n    // computation and will continue on the next frame. It's better to have it\n    // running at slower speed than jumping to the end.\n    if (deltaTime > Spring.MAX_DELTA_TIME_MS) {\n      deltaTime = Spring.MAX_DELTA_TIME_MS;\n    }\n    this._springTime += deltaTime;\n\n    const c = this._config.damping;\n    const m = this._config.mass;\n    const k = this._config.stiffness;\n    const fromValue = this._config.fromValue;\n    const toValue = this._config.toValue;\n    const v0 = -this._config.initialVelocity;\n\n    invariant(m > 0, \"Mass value must be greater than 0\");\n    invariant(k > 0, \"Stiffness value must be greater than 0\");\n    invariant(c > 0, \"Damping value must be greater than 0\");\n\n    let zeta = c / (2 * Math.sqrt(k * m)); // damping ratio (dimensionless)\n    const omega0 = Math.sqrt(k / m) / 1000; // undamped angular frequency of the oscillator (rad/ms)\n    const omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta); // exponential decay\n    const omega2 = omega0 * Math.sqrt(zeta * zeta - 1.0); // frequency of damped oscillation\n    const x0 = toValue - fromValue; // initial displacement of the spring at t = 0\n\n    if (zeta > 1 && !this._config.allowsOverdamping) {\n      zeta = 1;\n    }\n\n    let oscillation = 0.0;\n    let velocity = 0.0;\n    const t = this._springTime;\n    if (zeta < 1) {\n      // Under damped\n      const envelope = Math.exp(-zeta * omega0 * t);\n      oscillation =\n        toValue -\n        envelope *\n          ((v0 + zeta * omega0 * x0) / omega1 * Math.sin(omega1 * t) +\n            x0 * Math.cos(omega1 * t));\n      // This looks crazy -- it's actually just the derivative of the\n      // oscillation function\n      velocity =\n        zeta *\n          omega0 *\n          envelope *\n          (Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0) / omega1 +\n            x0 * Math.cos(omega1 * t)) -\n        envelope *\n          (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) -\n            omega1 * x0 * Math.sin(omega1 * t));\n    } else if (zeta === 1) {\n      // Critically damped\n      const envelope = Math.exp(-omega0 * t);\n      oscillation = toValue - envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity =\n        envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    } else {\n      // Overdamped\n      const envelope = Math.exp(-zeta * omega0 * t);\n      oscillation =\n        toValue -\n        envelope *\n          ((v0 + zeta * omega0 * x0) * Math.sinh(omega2 * t) +\n            omega2 * x0 * Math.cosh(omega2 * t)) /\n          omega2;\n      velocity =\n        envelope *\n          zeta *\n          omega0 *\n          (Math.sinh(omega2 * t) * (v0 + zeta * omega0 * x0) +\n            x0 * omega2 * Math.cosh(omega2 * t)) /\n          omega2 -\n        envelope *\n          (omega2 * Math.cosh(omega2 * t) * (v0 + zeta * omega0 * x0) +\n            omega2 * omega2 * x0 * Math.sinh(omega2 * t)) /\n          omega2;\n    }\n\n    this._currentTime = timestamp;\n    this._currentValue = oscillation;\n    this._currentVelocity = velocity;\n\n    if (!shouldNotifyListeners) {\n      return;\n    }\n\n    this._notifyListeners(\"onUpdate\");\n    if (!this._isAnimating) {\n      // a listener might have stopped us in _onUpdate\n      return;\n    }\n\n    // If the Spring is overshooting (when overshoot clamping is on), or if the\n    // spring is at rest (based on the thresholds set in the config), stop the\n    // animation.\n    if (this._isSpringOvershooting() || this._isSpringAtRest()) {\n      if (k !== 0) {\n        // Ensure that we end up with a round value\n        this._currentValue = toValue;\n        this._currentVelocity = 0;\n        this._notifyListeners(\"onUpdate\");\n      }\n\n      this.stop();\n      return;\n    }\n  }\n\n  private _isSpringOvershooting() {\n    const { stiffness, fromValue, toValue, overshootClamping } = this._config;\n    let isOvershooting = false;\n    if (overshootClamping && stiffness !== 0) {\n      if (fromValue < toValue) {\n        isOvershooting = this._currentValue > toValue;\n      } else {\n        isOvershooting = this._currentValue < toValue;\n      }\n    }\n    return isOvershooting;\n  }\n\n  private _isSpringAtRest() {\n    const {\n      stiffness,\n      toValue,\n      restDisplacementThreshold,\n      restVelocityThreshold\n    } = this._config;\n\n    const isNoVelocity =\n      Math.abs(this._currentVelocity) <= restVelocityThreshold;\n    const isNoDisplacement =\n      stiffness !== 0 &&\n      Math.abs(toValue - this._currentValue) <= restDisplacementThreshold;\n    return isNoDisplacement && isNoVelocity;\n  }\n}\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","condition","message","Error","maybeValue","defaultValue","config","this","_config","fromValue","withDefault","toValue","stiffness","damping","mass","initialVelocity","overshootClamping","allowsOverdamping","restVelocityThreshold","restDisplacementThreshold","_currentValue","_currentVelocity","Spring","_a","_reset","_isAnimating","_currentAnimationStep","_notifyListeners","requestAnimationFrame","_this","_step","Date","now","cancelAnimationFrame","_isSpringAtRest","updatedConfig","_advanceSpringToTime","baseConfig","listener","_listeners","push","onStart","onUpdate","onStop","listenerFn","reduce","result","values","indexOf","_currentTime","_springTime","eventName","forEach","maybeListenerFn","timestamp","shouldNotifyListeners","deltaTime","MAX_DELTA_TIME_MS","c","m","k","v0","invariant","zeta","Math","sqrt","omega0","omega1","omega2","x0","oscillation","velocity","envelope","exp","sin","cos","sinh","cosh","_isSpringOvershooting","stop","isOvershooting","isNoVelocity","abs"],"mappings":"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"}