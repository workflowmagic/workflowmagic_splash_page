{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar wobble_1 = require(\"wobble\");\n\nvar util_1 = require(\"./util\");\n\nvar easing_1 = require(\"@popmotion/easing\");\n\nvar popcorn_1 = require(\"@popmotion/popcorn\");\n\nvar globalAny = global;\nvar defaultsOptions = {\n  keepFrom: false,\n  type: 'morph',\n  getMargins: false,\n  portalElement: globalAny.document && globalAny.document.body,\n  spring: {\n    damping: 26,\n    mass: 1,\n    stiffness: 180,\n    overshootClamping: true\n  },\n  easings: easing_1.linear,\n  delaysRatio: 0.1,\n  isInitial: false\n};\n\nfunction useFade(opts) {\n  if (opts === void 0) {\n    opts = defaultsOptions;\n  }\n\n  var options = __assign({}, defaultsOptions, opts);\n\n  var getMargins = options.getMargins,\n      isInitial = options.isInitial,\n      delaysRatio = options.delaysRatio;\n  var prevNodeRef = react_1.useRef();\n  var cloneContainerRef = react_1.useRef();\n  var isMountedRef = react_1.useRef();\n\n  var cleanup = function cleanup() {\n    if (!cloneContainerRef.current) return;\n    prevNodeRef.current.style.visibility = null;\n    options.portalElement.removeChild(cloneContainerRef.current);\n    cloneContainerRef.current = null;\n  };\n\n  var halfClampEnd = popcorn_1.clamp(1 - delaysRatio, 1);\n\n  var easeFast = function easeFast(x) {\n    return easing_1.easeInOut(Number(popcorn_1.interpolate([1 - delaysRatio, 1], [0, 1])(halfClampEnd(x))));\n  };\n\n  var spring = new wobble_1.Spring(__assign({\n    fromValue: Number(isInitial),\n    toValue: Number(!isInitial)\n  }, options.spring));\n  spring.onUpdate(function (s) {\n    if (!cloneContainerRef.current) return;\n    cloneContainerRef.current.style.opacity = String(easeFast(s.currentValue));\n  }).onStop(cleanup);\n  var getRef = react_1.useCallback(function (n) {\n    var node = n || prevNodeRef.current;\n    var hasNode = !!node;\n\n    if (hasNode && isMountedRef.current) {\n      node.style.visibility = 'visible';\n      var rect = util_1.getRect(node, {\n        getMargins: getMargins\n      });\n      if (!cloneContainerRef.current) cloneContainerRef.current = util_1.cloneElement(node, options);\n      node.style.visibility = 'hidden';\n      prevNodeRef.current = node;\n      util_1.applyOverlayStyle(cloneContainerRef.current, __assign({}, rect));\n    }\n\n    var toValue = Number(!!n);\n    if (spring.currentValue === toValue) cleanup();\n    spring.updateConfig({\n      toValue: toValue\n    }).start();\n  }, []);\n  isMountedRef.current = true;\n  var style = {\n    visibility: 'hidden'\n  };\n  var props = {\n    ref: getRef,\n    style: style\n  };\n\n  var propsFn = function propsFn(_a) {\n    if (_a === void 0) {\n      _a = {};\n    }\n\n    var _b = _a.style,\n        style = _b === void 0 ? {} : _b,\n        extra = __rest(_a, [\"style\"]);\n\n    return __assign({}, props, {\n      style: __assign({}, props.style, style)\n    });\n  };\n\n  propsFn.ref = getRef;\n  propsFn.style = style;\n  return propsFn;\n}\n\nexports.default = useFade;","map":null,"metadata":{},"sourceType":"script"}