{"ast":null,"code":"import _slicedToArray from \"/home/wktdev/Desktop/workflowmagic_splash_page/workflowmagic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/wktdev/Desktop/workflowmagic_splash_page/workflowmagic/src/PageComponents/Calendar/index.js\";\n\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport calendarStyles from 'react-big-calendar/lib/css/react-big-calendar.css';\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment-timezone';\nimport style from \"../../PageComponents/Calendar/style\";\nimport restUrlToObject, { createRepeatWeekDayDates, createRepeatDatesDaily } from '../.././helper_functions';\nimport db, { getAllClients, getClientCalendarEvents, createCalendarEvent, getAllCalendarEvents, createCalendarEventGroupID, deleteCalendarEvent, deleteGroupedCalendarEvents } from \"../../services/indexDB\";\nimport REST from \"../../services/rest\";\nimport CreateEventModal from \"../../PageComponents/Calendar/CreateEventModal\";\nimport EditEventModal from \"../../PageComponents/Calendar/EditEventModal\";\nimport DateTextEditor from \"../../PageComponents/Calendar/DateTextEditor\";\nimport SearchClients from \"../../PageComponents/Calendar/ClientSearch\";\nimport \"../../index.css\"; // https://www.npmjs.com/package/react-timezone-select\n\nvar localizer = BigCalendar.momentLocalizer(moment);\n\nvar styles = function styles(theme) {\n  return style(theme);\n};\n\nvar Calendar = function Calendar(props) {\n  var classes = props.classes; // @Clients and selected client\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      clientName = _useState2[0],\n      setClientName = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clientList = _useState4[0],\n      setClientList = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedClient = _useState6[0],\n      setSelectedClient = _useState6[1]; // @Get and set calendar events\n\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      calendarEventsList = _useState8[0],\n      setCalendarEventsList = _useState8[1];\n\n  var _useState9 = useState(\"\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      calendarEventsQueryTrigger = _useState10[0],\n      setCalendarEventsQueryTrigger = _useState10[1]; // @ Create events \n\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      modalOpenCreateEvent = _useState12[0],\n      setModalOpenCreateEvent = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      eventTitle = _useState14[0],\n      setEventTitle = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      eventDescription = _useState16[0],\n      setEventDescription = _useState16[1];\n\n  var initialStartDateState = new Date(moment()); //_____Dates & TimeZone\n\n  var _useState17 = useState(initialStartDateState),\n      _useState18 = _slicedToArray(_useState17, 2),\n      eventDate = _useState18[0],\n      setEventDate = _useState18[1];\n\n  var _useState19 = useState(initialStartDateState),\n      _useState20 = _slicedToArray(_useState19, 2),\n      dateOne = _useState20[0],\n      setDateOne = _useState20[1];\n\n  var _useState21 = useState(initialStartDateState),\n      _useState22 = _slicedToArray(_useState21, 2),\n      dateTwo = _useState22[0],\n      setDateTwo = _useState22[1];\n\n  var _useState23 = useState(initialStartDateState),\n      _useState24 = _slicedToArray(_useState23, 2),\n      repeatEventUntil = _useState24[0],\n      setRepeatEventUntil = _useState24[1]; //@Edit events\n\n\n  var _useState25 = useState({}),\n      _useState26 = _slicedToArray(_useState25, 2),\n      selectedCalendarEvent = _useState26[0],\n      setSelectedCalendarEvent = _useState26[1];\n\n  var _useState27 = useState(false),\n      _useState28 = _slicedToArray(_useState27, 2),\n      modalOpenEditEvent = _useState28[0],\n      setModalOpenEditEvent = _useState28[1]; //@ Timezones\n\n\n  var _useState29 = useState({\n    value: \"America/Dawson\",\n    label: \"(GMT-08:00) Pacific Time (US and Canada); Tijuana\"\n  }),\n      _useState30 = _slicedToArray(_useState29, 2),\n      timeZoneLocal = _useState30[0],\n      setTimeZoneLocal = _useState30[1];\n\n  var _useState31 = useState({\n    label: \"(GMT+01:00) Brussels, Copenhagen, Madrid\",\n    value: \"Europe/Brussels\"\n  }),\n      _useState32 = _slicedToArray(_useState31, 2),\n      timeZoneOne = _useState32[0],\n      setTimeZoneOne = _useState32[1];\n\n  var _useState33 = useState({\n    label: \"(GMT+01:00) Brussels, Copenhagen, Madrid\",\n    value: \"Europe/Brussels\"\n  }),\n      _useState34 = _slicedToArray(_useState33, 2),\n      timeZoneTwo = _useState34[0],\n      setTimeZoneTwo = _useState34[1]; //@ date repeat value\n\n\n  var _useState35 = useState(false),\n      _useState36 = _slicedToArray(_useState35, 2),\n      repeatDaily = _useState36[0],\n      _setRepeatDaily = _useState36[1];\n\n  var _useState37 = useState(false),\n      _useState38 = _slicedToArray(_useState37, 2),\n      repeatWeekly = _useState38[0],\n      _setRepeatWeekly = _useState38[1];\n\n  var _useState39 = useState(false),\n      _useState40 = _slicedToArray(_useState39, 2),\n      repeatMonthly = _useState40[0],\n      _setRepeatMonthly = _useState40[1]; //@ Model IS open\n\n\n  var _useState41 = useState(false),\n      _useState42 = _slicedToArray(_useState41, 2),\n      modalOpenState = _useState42[0],\n      setModalOpenState = _useState42[1];\n\n  useEffect(function () {\n    // @Get all clients\n    getAllClients().then(function (clients) {\n      setClientList(clients);\n    });\n  }, []);\n  useEffect(function () {\n    // @Get all calendar events\n    var id = REST.getClientID();\n\n    if (id) {\n      getClientCalendarEvents(id).then(function (result) {\n        setCalendarEventsList(result);\n      });\n    } else {\n      getAllCalendarEvents().then(function (result) {\n        setCalendarEventsList(result);\n      });\n    }\n  }, [calendarEventsQueryTrigger]);\n  useEffect(function () {\n    var name = REST.getClientName();\n\n    if (name) {\n      setClientName(name);\n    } else {\n      setClientName(\"Full Calendar\");\n    }\n  }, [calendarEventsQueryTrigger]); //_____________________BEGIN State listeners for time zone changes\n\n  useEffect(function () {\n    var localDateConvertion = moment(eventDate).format(\"LLLL\");\n    console.log(localDateConvertion);\n    var localDate = moment.tz(localDateConvertion, \"dddd, MMM DD, YYYY h:mm a\", timeZoneLocal.value);\n    var dateOneVal = localDate.clone().tz(timeZoneOne.value);\n    var dateTwoVal = localDate.clone().tz(timeZoneTwo.value);\n    setDateOne(dateOneVal);\n    setDateTwo(dateTwoVal);\n  }, [timeZoneLocal, eventDate]);\n  useEffect(function () {\n    var localDateConvertion = moment(dateOne).format(\"LLLL\");\n    console.log(localDateConvertion);\n    var localDate = moment.tz(localDateConvertion, \"dddd, MMM DD, YYYY h:mm a\", timeZoneOne.value);\n    var eventDateVal = localDate.clone().tz(timeZoneLocal.value);\n    var dateTwoVal = localDate.clone().tz(timeZoneTwo.value);\n    setEventDate(eventDateVal);\n    setDateTwo(dateTwoVal);\n  }, [timeZoneOne]);\n  useEffect(function () {\n    var localDateConvertion = moment(dateTwo).format(\"LLLL\");\n    console.log(localDateConvertion);\n    var localDate = moment.tz(localDateConvertion, \"dddd, MMM DD, YYYY h:mm a\", timeZoneTwo.value);\n    var eventDateVal = localDate.clone().tz(timeZoneLocal.value);\n    var dateOneVal = localDate.clone().tz(timeZoneOne.value);\n    setEventDate(eventDateVal);\n    setDateOne(dateOneVal);\n  }, [timeZoneTwo]); //_____________________END State listeners for time zone changes\n\n  useLayoutEffect(function () {\n    console.log(eventDescription);\n  });\n\n  function instantSearchHandler() {\n    console.log(\"search handler\");\n  } //__________________________________BEGIN Modal open/close and submission\n\n\n  function openCreateEventModal(event) {\n    var clientID = REST.getClientID();\n    var clientName = REST.getClientName();\n    var clientData = {\n      name: clientName,\n      id: clientID\n    };\n\n    if (clientID === undefined) {\n      clientData = \"\";\n      setSelectedClient(clientData);\n      setEventDate(event.start);\n      setRepeatEventUntil(event.start);\n      setModalOpenCreateEvent(true);\n    } else {\n      setSelectedClient(clientData);\n      setEventDate(event.start);\n      setRepeatEventUntil(event.start);\n      setModalOpenCreateEvent(true);\n    } // console.log(\"opened before conditional\")\n    // if(event){\n    //   setSelectedClient(client);\n    //   setEventDate(event.start);\n    //   setRepeatEventUntil(event.start);\n    //   setModalOpenCreateEvent(true);\n    // }else{\n    //   console.log(\"yessss\");\n    //   let event = new Date(moment());\n    //   setSelectedClient(client);\n    //   setEventDate(event);\n    //   setRepeatEventUntil(event);\n    //   setModalOpenCreateEvent(true);\n    // }\n\n  }\n\n  function setEventTitleHandler(e) {\n    setEventTitle(e.target.value);\n  }\n\n  function closeCreateEventModal() {\n    setModalOpenCreateEvent(false);\n  }\n\n  function closeEditEventModal() {\n    setModalOpenEditEvent(false);\n  }\n\n  function submitDate(event) {\n    if (!eventTitle) {\n      alert(\"please add an event title\");\n      event.preventDefault();\n      return;\n    }\n\n    event.preventDefault();\n    console.log(eventDate);\n    console.log(selectedClient);\n    var repeat = moment(eventDate).format(\"LLLL\") === moment(repeatEventUntil).format(\"LLLL\") ? false : true;\n    var calendarEvent = {\n      start: new Date(eventDate),\n      end: new Date(eventDate),\n      title: eventTitle,\n      description: eventDescription,\n      clientID: selectedClient.id,\n      clientName: selectedClient.name,\n      userID: undefined,\n      groupID: undefined\n    };\n\n    if (repeatDaily) {\n      // create_calendar_group entry in indexDB\n      createCalendarEventGroupID(calendarEvent.title, calendarEvent.clientName, calendarEvent.clientID).then(function (groupID) {\n        // let listOfEvents = createRepeatWeekDayDates(eventDate, repeatEventUntil);\n        var listOfEvents = createRepeatDatesDaily(eventDate, repeatEventUntil);\n        console.log(listOfEvents);\n\n        for (var i = 0; i < listOfEvents.length; i += 1) {\n          var _calendarEvent = {\n            start: listOfEvents[i],\n            end: listOfEvents[i],\n            title: eventTitle,\n            description: eventDescription,\n            clientID: selectedClient.id,\n            clientName: selectedClient.name,\n            userID: undefined,\n            groupID: groupID // set group ID here.\n\n          };\n          createCalendarEvent(_calendarEvent);\n          setCalendarEventsQueryTrigger(Math.random()); // Math.random is used to retrigger useEffect and get events - Nothing else.\n        }\n\n        setEventTitle(\"\");\n        setEventDescription(\"\");\n      });\n    } else if (repeatWeekly) {\n      // create_calendar_group entry in indexDB\n      createCalendarEventGroupID(calendarEvent.title, calendarEvent.clientName, calendarEvent.clientID).then(function (groupID) {\n        // let listOfEvents = createRepeatWeekDayDates(eventDate, repeatEventUntil);\n        var listOfEvents = createRepeatWeekDayDates(eventDate, repeatEventUntil);\n\n        for (var i = 0; i < listOfEvents.length; i += 1) {\n          var _calendarEvent2 = {\n            start: listOfEvents[i],\n            end: listOfEvents[i],\n            title: eventTitle,\n            description: eventDescription,\n            clientID: selectedClient.id,\n            clientName: selectedClient.name,\n            userID: undefined,\n            groupID: groupID // set group ID here.\n\n          };\n          createCalendarEvent(_calendarEvent2);\n          setCalendarEventsQueryTrigger(Math.random()); // Math.random is used to retrigger useEffect and get events - Nothing else.\n        }\n\n        setEventTitle(\"\");\n        setEventDescription(\"\");\n      });\n    } else {\n      createCalendarEvent(calendarEvent).then(function (id) {\n        console.log(id);\n        setCalendarEventsQueryTrigger(Math.random() + id); // Math.random is used to retrigger useEffect and get events - Nothing else.\n\n        setEventTitle(\"\");\n        setEventDescription(\"\");\n      });\n    }\n\n    closeCreateEventModal();\n  }\n\n  function clearDateRepeat() {\n    _setRepeatDaily(false);\n\n    _setRepeatWeekly(false);\n\n    _setRepeatMonthly(false);\n  }\n\n  function selectEventHandler(eventObj) {\n    setSelectedCalendarEvent(eventObj);\n    console.log(eventObj);\n    setModalOpenEditEvent(true);\n  }\n\n  function deleteEvent(event) {\n    event.preventDefault();\n    deleteCalendarEvent(selectedCalendarEvent.id).then(function (bool) {\n      setSelectedCalendarEvent({});\n      setCalendarEventsQueryTrigger(Math.random()); // Math.random is just here to trigger useEffect. Nothing else\n    });\n    closeEditEventModal();\n  } // @ Determine if event is part of a group\n\n\n  function deleteEventAndGroup(event) {\n    // @ if group id is undefined <----\n    // only delete individual event\n    event.preventDefault();\n\n    if (selectedCalendarEvent.group_id) {\n      deleteGroupedCalendarEvents(selectedCalendarEvent.group_id).then(function (x) {\n        setSelectedCalendarEvent({});\n        setCalendarEventsQueryTrigger(Math.random()); // Math.random is just here to trigger useEffect. Nothing else\n      });\n      closeEditEventModal();\n    } else {\n      deleteEvent(event);\n      closeEditEventModal();\n    }\n  }\n\n  function onChangeTimeZoneLocal(timezone) {\n    setTimeZoneLocal(timezone);\n  }\n\n  function localDateHandler(momentObj) {\n    var localDateConvertion = moment(momentObj).format(\"LLLL\");\n    var localDate = moment.tz(localDateConvertion, \"dddd, MMM DD, YYYY h:mm a\", timeZoneLocal.value);\n    var dateOneVal = localDate.clone().tz(timeZoneOne.value);\n    var dateTwoVal = localDate.clone().tz(timeZoneTwo.value);\n    setEventDate(localDate);\n    console.log(eventDate);\n    setDateOne(dateOneVal);\n    setDateTwo(dateTwoVal);\n    var startDateIsAheadOfEndDate = moment(localDate).isAfter(repeatEventUntil); // \n\n    if (startDateIsAheadOfEndDate) {\n      setRepeatEventUntil(localDate);\n    }\n  }\n\n  function onChangeTimeZoneOne(timezone) {\n    setTimeZoneOne(timezone);\n  }\n\n  function dateOneHandler(momentObj) {\n    var mainConvertion = moment(momentObj).format(\"LLLL\");\n    var main = moment.tz(mainConvertion, \"dddd, MMM DD, YYYY h:mm a\", timeZoneOne.value);\n    var eventDate = main.clone().tz(timeZoneLocal.value);\n    var dateTwo = main.clone().tz(timeZoneTwo.value);\n    setDateOne(main);\n    setEventDate(eventDate);\n    setDateTwo(dateTwo);\n  }\n\n  function onChangeTimeZoneTwo(timezone) {\n    setTimeZoneTwo(timezone);\n  }\n\n  function dateTwoHandler(momentObj) {\n    var mainConvertion = moment(momentObj).format(\"LLLL\");\n    var main = moment.tz(mainConvertion, \"dddd, MMM DD, YYYY h:mm a\", timeZoneTwo.value);\n    var eventDate = main.clone().tz(timeZoneLocal.value);\n    var dateOne = main.clone().tz(timeZoneOne.value);\n    setDateTwo(main);\n    setEventDate(eventDate);\n    setDateOne(dateOne);\n  }\n\n  function setEndDate(eventDateEnd) {\n    var endDateIsBeforeStartDate = moment(eventDateEnd).isBefore(eventDate); // \n\n    if (endDateIsBeforeStartDate) {\n      alert(\"end date can not be before start date\");\n    } else {\n      setRepeatEventUntil(eventDateEnd);\n    }\n  } // function redirectToWorkflows(val){\n  //    window.location.href = `/client/${val.id}/client-name/${val.name}/workflows`\n  // }\n\n\n  function onBodyDescriptionChange(val) {\n    setEventDescription(val);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.calendarContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.clientTitleContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"logoFontContainerDashboard\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 19\n    }\n  }, \"Workflow Magic\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"clientFontContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 25\n    }\n  }, decodeURI(clientName))), /*#__PURE__*/React.createElement(\"p\", {\n    className: classes.instructions,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 520,\n      columnNumber: 13\n    }\n  }, \"To add an event to the calendar, simply select a date.\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: classes.description,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 17\n    }\n  }, \"Calendar\"), /*#__PURE__*/React.createElement(BigCalendar, {\n    selectable: true,\n    onSelectEvent: function onSelectEvent(a, b) {\n      return selectEventHandler(a, b);\n    },\n    localizer: localizer,\n    defaultDate: new Date(),\n    defaultView: \"month\",\n    events: calendarEventsList,\n    style: {\n      height: \"50vh\",\n      position: \"relative\"\n    },\n    onSelectSlot: function onSelectSlot(data) {\n      openCreateEventModal(data);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 6,\n    xl: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.selectorParent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(CreateEventModal, {\n    open: modalOpenCreateEvent,\n    onClose: closeCreateEventModal,\n    eventTitle: eventTitle,\n    setEventTitle: setEventTitleHandler //_____________________________________________________________\n    ,\n    eventDate: eventDate,\n    localDateHandler: localDateHandler,\n    timeZoneLocal: timeZoneLocal,\n    onChangeTimeZoneLocal: onChangeTimeZoneLocal //______________________________________________________________\n    ,\n    dateOne: dateOne,\n    dateOneHandler: dateOneHandler,\n    timeZoneOne: timeZoneOne,\n    onChangeTimeZoneOne: onChangeTimeZoneOne //______________________________________________________________\n    ,\n    dateTwo: dateTwo,\n    dateTwoHandler: dateTwoHandler,\n    onChangeTimeZoneTwo: onChangeTimeZoneTwo,\n    timeZoneTwo: timeZoneTwo //______________________________________________________________\n    ,\n    setRepeatEventUntil: function setRepeatEventUntil(e) {\n      return setEndDate(e);\n    },\n    repeatEventUntil: repeatEventUntil,\n    clearDateRepeat: clearDateRepeat,\n    repeatDaily: repeatDaily,\n    setRepeatDaily: function setRepeatDaily(e) {\n      return _setRepeatDaily(e);\n    },\n    repeatWeekly: repeatWeekly,\n    setRepeatWeekly: function setRepeatWeekly(e) {\n      return _setRepeatWeekly(e);\n    },\n    repeatMonthly: repeatMonthly,\n    setRepeatMonthly: function setRepeatMonthly(e) {\n      return _setRepeatMonthly(e);\n    },\n    submitDate: submitDate //______________________________________________________________\n    ,\n    onBodyDescriptionChange: onBodyDescriptionChange,\n    bodyDescriptionValue: eventDescription //______________________________________________________________\n    ,\n    selectedClient: selectedClient,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(EditEventModal, {\n    open: modalOpenEditEvent,\n    onClose: closeEditEventModal,\n    deleteEvent: deleteEvent,\n    eventData: selectedCalendarEvent,\n    deleteEventAndGroup: deleteEventAndGroup,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 15\n    }\n  })))));\n};\n\nCalendar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(Calendar);\n/*\n\n set all inputs.\n on each inpout run a useEffect to calculate conversions\n\n*/\n\n/*______________________________\n\n\n openCreateEventModal\n\n Listen for eventDate change in a useEffect.\n in the useEffect set dateOne and dateTwo\n\n\n\n\n\n\n\n\n@itinerary\n\nTIMEZONE conversion:  https://www.npmjs.com/package/select-timezone-material-ui\n\nSet workflow placeholder text to be larger:      font-size: 3.3vmin;\n\nCREATE repeatable event entries based on day & month\n\n@IMPORTANT TODO:   when deleting clients, make sure to destroy all workflows and Calendar events!\n\n\n\n\n\nSHOW ONLY: show only feature for client events\n\n\nINSTANT SEARCH\n\nSAVE/LOAD\n\n\nEMAIL notification API\n\nBEGIN new app for invoicing\n\n_______________________________________\n\n\n\n\n\nTake convas screen shot to convert to pdf\nhttps://blog.risingstack.com/pdf-from-html-node-js-puppeteer/\n\nhttps://stackblitz.com/edit/react-4798tj\n\nhttps://medium.com/@shivekkhurana/how-to-create-pdfs-from-react-components-client-side-solution-7f506d9dfa6d\n\nhttps://html2canvas.hertzen.com/\n\n*/","map":{"version":3,"sources":["/home/wktdev/Desktop/workflowmagic_splash_page/workflowmagic/src/PageComponents/Calendar/index.js"],"names":["React","useState","useEffect","useLayoutEffect","PropTypes","withStyles","Grid","ListItem","List","TextField","Button","Paper","calendarStyles","BigCalendar","moment","style","restUrlToObject","createRepeatWeekDayDates","createRepeatDatesDaily","db","getAllClients","getClientCalendarEvents","createCalendarEvent","getAllCalendarEvents","createCalendarEventGroupID","deleteCalendarEvent","deleteGroupedCalendarEvents","REST","CreateEventModal","EditEventModal","DateTextEditor","SearchClients","localizer","momentLocalizer","styles","theme","Calendar","props","classes","undefined","clientName","setClientName","clientList","setClientList","selectedClient","setSelectedClient","calendarEventsList","setCalendarEventsList","calendarEventsQueryTrigger","setCalendarEventsQueryTrigger","modalOpenCreateEvent","setModalOpenCreateEvent","eventTitle","setEventTitle","eventDescription","setEventDescription","initialStartDateState","Date","eventDate","setEventDate","dateOne","setDateOne","dateTwo","setDateTwo","repeatEventUntil","setRepeatEventUntil","selectedCalendarEvent","setSelectedCalendarEvent","modalOpenEditEvent","setModalOpenEditEvent","value","label","timeZoneLocal","setTimeZoneLocal","timeZoneOne","setTimeZoneOne","timeZoneTwo","setTimeZoneTwo","repeatDaily","setRepeatDaily","repeatWeekly","setRepeatWeekly","repeatMonthly","setRepeatMonthly","modalOpenState","setModalOpenState","then","clients","id","getClientID","result","name","getClientName","localDateConvertion","format","console","log","localDate","tz","dateOneVal","clone","dateTwoVal","eventDateVal","instantSearchHandler","openCreateEventModal","event","clientID","clientData","start","setEventTitleHandler","e","target","closeCreateEventModal","closeEditEventModal","submitDate","alert","preventDefault","repeat","calendarEvent","end","title","description","userID","groupID","listOfEvents","i","length","Math","random","clearDateRepeat","selectEventHandler","eventObj","deleteEvent","bool","deleteEventAndGroup","group_id","x","onChangeTimeZoneLocal","timezone","localDateHandler","momentObj","startDateIsAheadOfEndDate","isAfter","onChangeTimeZoneOne","dateOneHandler","mainConvertion","main","onChangeTimeZoneTwo","dateTwoHandler","setEndDate","eventDateEnd","endDateIsBeforeStartDate","isBefore","onBodyDescriptionChange","val","root","calendarContainer","clientTitleContainer","decodeURI","instructions","a","b","height","position","data","selectorParent","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport calendarStyles from 'react-big-calendar/lib/css/react-big-calendar.css';\nimport BigCalendar from 'react-big-calendar';\nimport moment from 'moment-timezone';\nimport style from \"../../PageComponents/Calendar/style\";\nimport restUrlToObject, { createRepeatWeekDayDates, createRepeatDatesDaily } from '../.././helper_functions';\nimport db, { getAllClients, getClientCalendarEvents, createCalendarEvent, getAllCalendarEvents, createCalendarEventGroupID, deleteCalendarEvent, deleteGroupedCalendarEvents } from \"../../services/indexDB\";\nimport REST from \"../../services/rest\";\nimport CreateEventModal from \"../../PageComponents/Calendar/CreateEventModal\";\nimport EditEventModal from \"../../PageComponents/Calendar/EditEventModal\";\nimport DateTextEditor from \"../../PageComponents/Calendar/DateTextEditor\";\nimport SearchClients from \"../../PageComponents/Calendar/ClientSearch\";\nimport \"../../index.css\";\n\n// https://www.npmjs.com/package/react-timezone-select\n\n\n\n\nconst localizer = BigCalendar.momentLocalizer(moment);\nconst styles = theme => (style(theme));\n\n\nconst Calendar = (props) => {\n    const { classes } = props;\n\n    // @Clients and selected client\n    const [clientName,setClientName] = useState(undefined)\n    const [clientList, setClientList] = useState([]);\n    const [selectedClient, setSelectedClient] = useState({});\n\n\n    // @Get and set calendar events\n    const [calendarEventsList, setCalendarEventsList] = useState([]);\n    const [calendarEventsQueryTrigger, setCalendarEventsQueryTrigger] = useState(\"\");\n\n    // @ Create events \n    const [modalOpenCreateEvent, setModalOpenCreateEvent] = useState(false);\n    const [eventTitle, setEventTitle] = useState(\"\");\n    const [eventDescription, setEventDescription] = useState(\"\");\n    const initialStartDateState = new Date(moment());\n\n    //_____Dates & TimeZone\n    const [eventDate, setEventDate] = useState(initialStartDateState);\n    const [dateOne, setDateOne] = useState(initialStartDateState);\n    const [dateTwo, setDateTwo] = useState(initialStartDateState);\n\n\n    const [repeatEventUntil, setRepeatEventUntil] = useState(initialStartDateState);\n\n\n    //@Edit events\n    const [selectedCalendarEvent, setSelectedCalendarEvent] = useState({});\n    const [modalOpenEditEvent, setModalOpenEditEvent] = useState(false);\n\n\n    //@ Timezones\n    const [timeZoneLocal, setTimeZoneLocal] = useState({ value: \"America/Dawson\", label: \"(GMT-08:00) Pacific Time (US and Canada); Tijuana\" });\n    const [timeZoneOne, setTimeZoneOne] = useState({ label: \"(GMT+01:00) Brussels, Copenhagen, Madrid\", value: \"Europe/Brussels\" });\n    const [timeZoneTwo, setTimeZoneTwo] = useState({ label: \"(GMT+01:00) Brussels, Copenhagen, Madrid\", value: \"Europe/Brussels\" });\n\n\n    //@ date repeat value\n    const [repeatDaily, setRepeatDaily] = useState(false)\n    const [repeatWeekly, setRepeatWeekly] = useState(false)\n    const [repeatMonthly, setRepeatMonthly] = useState(false)\n\n\n    //@ Model IS open\n    const [modalOpenState, setModalOpenState] = useState(false)\n\n    useEffect(() => { // @Get all clients\n        getAllClients().then((clients) => {\n            setClientList(clients)\n        })\n\n    }, []);\n\n\n    useEffect(() => { // @Get all calendar events\n\n        const id = REST.getClientID();\n\n\n        if (id) {\n            getClientCalendarEvents(id).then((result) => {\n                setCalendarEventsList(result)\n            });\n\n        } else {\n\n            getAllCalendarEvents().then((result) => {\n                setCalendarEventsList(result)\n            });\n\n        }\n\n\n    }, [calendarEventsQueryTrigger])\n\n    useEffect(()=>{\n        const name = REST.getClientName();\n        if(name){\n            setClientName(name)\n        }else{\n            setClientName(\"Full Calendar\")\n        }\n    },[calendarEventsQueryTrigger])\n\n\n\n\n    //_____________________BEGIN State listeners for time zone changes\n\n    useEffect(() => {\n\n        let localDateConvertion = moment(eventDate).format(\"LLLL\");\n        console.log(localDateConvertion)\n        let localDate = moment.tz(localDateConvertion, \"dddd, MMM DD, YYYY h:mm a\", timeZoneLocal.value);\n        let dateOneVal = localDate.clone().tz(timeZoneOne.value);\n        let dateTwoVal = localDate.clone().tz(timeZoneTwo.value);\n        setDateOne(dateOneVal)\n        setDateTwo(dateTwoVal)\n    }, [timeZoneLocal,eventDate])\n\n    useEffect(() => {\n        let localDateConvertion = moment(dateOne).format(\"LLLL\");\n        console.log(localDateConvertion)\n        let localDate = moment.tz(localDateConvertion, \"dddd, MMM DD, YYYY h:mm a\", timeZoneOne.value);\n        let eventDateVal = localDate.clone().tz(timeZoneLocal.value);\n        let dateTwoVal = localDate.clone().tz(timeZoneTwo.value);\n        setEventDate(eventDateVal)\n        setDateTwo(dateTwoVal)\n    }, [timeZoneOne])\n\n\n    useEffect(() => {\n        let localDateConvertion = moment(dateTwo).format(\"LLLL\");\n        console.log(localDateConvertion)\n        let localDate = moment.tz(localDateConvertion, \"dddd, MMM DD, YYYY h:mm a\", timeZoneTwo.value);\n        let eventDateVal = localDate.clone().tz(timeZoneLocal.value);\n        let dateOneVal = localDate.clone().tz(timeZoneOne.value);\n        setEventDate(eventDateVal)\n        setDateOne(dateOneVal)\n    }, [timeZoneTwo])\n\n    //_____________________END State listeners for time zone changes\n\n    useLayoutEffect(() => {\n        console.log(eventDescription)\n    })\n\n\n\n    function instantSearchHandler() {\n        console.log(\"search handler\")\n    }\n\n\n    //__________________________________BEGIN Modal open/close and submission\n\n    function openCreateEventModal(event) {\n\n        const clientID = REST.getClientID();\n        const clientName = REST.getClientName();\n        let clientData = {\n            name: clientName,\n            id: clientID\n        }\n\n\n        if (clientID === undefined) {\n            clientData = \"\"\n            setSelectedClient(clientData);\n            setEventDate(event.start);\n            setRepeatEventUntil(event.start);\n            setModalOpenCreateEvent(true);\n        } else {\n\n            setSelectedClient(clientData);\n            setEventDate(event.start);\n            setRepeatEventUntil(event.start);\n            setModalOpenCreateEvent(true);\n        }\n\n        // console.log(\"opened before conditional\")\n\n        // if(event){\n\n        //   setSelectedClient(client);\n        //   setEventDate(event.start);\n        //   setRepeatEventUntil(event.start);\n        //   setModalOpenCreateEvent(true);\n\n        // }else{\n\n        //   console.log(\"yessss\");\n        //   let event = new Date(moment());\n        //   setSelectedClient(client);\n        //   setEventDate(event);\n        //   setRepeatEventUntil(event);\n        //   setModalOpenCreateEvent(true);\n\n        // }\n\n\n\n\n    }\n\n\n\n    function setEventTitleHandler(e) {\n        setEventTitle(e.target.value);\n    }\n\n\n    function closeCreateEventModal() {\n        setModalOpenCreateEvent(false)\n    }\n\n\n    function closeEditEventModal() {\n        setModalOpenEditEvent(false)\n    }\n\n\n\n\n    function submitDate(event) {\n\n\n        if (!eventTitle) {\n            alert(\"please add an event title\")\n            event.preventDefault()\n            return\n        }\n\n        event.preventDefault();\n        console.log(eventDate);\n        console.log(selectedClient)\n\n        let repeat = moment(eventDate).format(\"LLLL\") === moment(repeatEventUntil).format(\"LLLL\") ? false : true\n\n        let calendarEvent = {\n            start: new Date(eventDate),\n            end: new Date(eventDate),\n            title: eventTitle,\n            description: eventDescription,\n            clientID: selectedClient.id,\n            clientName: selectedClient.name,\n            userID: undefined,\n            groupID: undefined\n        }\n\n\n        if (repeatDaily) {\n\n            // create_calendar_group entry in indexDB\n            createCalendarEventGroupID(calendarEvent.title, calendarEvent.clientName, calendarEvent.clientID).then((groupID) => {\n\n                // let listOfEvents = createRepeatWeekDayDates(eventDate, repeatEventUntil);\n\n                let listOfEvents = createRepeatDatesDaily(eventDate, repeatEventUntil);\n                console.log(listOfEvents)\n\n                for (let i = 0; i < listOfEvents.length; i += 1) {\n\n\n                    let calendarEvent = {\n                        start: listOfEvents[i],\n                        end: listOfEvents[i],\n                        title: eventTitle,\n                        description: eventDescription,\n                        clientID: selectedClient.id,\n                        clientName: selectedClient.name,\n                        userID: undefined,\n                        groupID: groupID // set group ID here.\n                    }\n\n\n                    createCalendarEvent(calendarEvent);\n                    setCalendarEventsQueryTrigger(Math.random()) // Math.random is used to retrigger useEffect and get events - Nothing else.\n\n                }\n\n                setEventTitle(\"\");\n                setEventDescription(\"\");\n\n\n            });\n\n\n\n        } else if (repeatWeekly) {\n\n            // create_calendar_group entry in indexDB\n\n            createCalendarEventGroupID(calendarEvent.title, calendarEvent.clientName, calendarEvent.clientID).then((groupID) => {\n                // let listOfEvents = createRepeatWeekDayDates(eventDate, repeatEventUntil);\n                let listOfEvents = createRepeatWeekDayDates(eventDate, repeatEventUntil);\n\n                for (let i = 0; i < listOfEvents.length; i += 1) {\n\n\n                    let calendarEvent = {\n                        start: listOfEvents[i],\n                        end: listOfEvents[i],\n                        title: eventTitle,\n                        description: eventDescription,\n                        clientID: selectedClient.id,\n                        clientName: selectedClient.name,\n                        userID: undefined,\n                        groupID: groupID // set group ID here.\n                    }\n\n\n                    createCalendarEvent(calendarEvent);\n                    setCalendarEventsQueryTrigger(Math.random()) // Math.random is used to retrigger useEffect and get events - Nothing else.\n\n                }\n\n                setEventTitle(\"\");\n                setEventDescription(\"\");\n\n\n            });\n\n\n        } else {\n\n\n            createCalendarEvent(calendarEvent).then((id) => {\n                console.log(id);\n                setCalendarEventsQueryTrigger(Math.random() + id) // Math.random is used to retrigger useEffect and get events - Nothing else.\n                setEventTitle(\"\");\n                setEventDescription(\"\");\n\n            })\n\n\n        }\n\n\n        closeCreateEventModal();\n    }\n\n    function clearDateRepeat() {\n        setRepeatDaily(false)\n        setRepeatWeekly(false)\n        setRepeatMonthly(false)\n    }\n\n\n\n    function selectEventHandler(eventObj) {\n        setSelectedCalendarEvent(eventObj)\n        console.log(eventObj)\n        setModalOpenEditEvent(true)\n\n    }\n\n\n\n    function deleteEvent(event) {\n        event.preventDefault();\n\n        deleteCalendarEvent(selectedCalendarEvent.id).then((bool) => {\n            setSelectedCalendarEvent({});\n            setCalendarEventsQueryTrigger(Math.random()); // Math.random is just here to trigger useEffect. Nothing else\n\n        });\n\n        closeEditEventModal();\n\n    }\n\n    // @ Determine if event is part of a group\n    function deleteEventAndGroup(event) {\n\n        // @ if group id is undefined <----\n        // only delete individual event\n\n        event.preventDefault()\n\n        if (selectedCalendarEvent.group_id) {\n\n            deleteGroupedCalendarEvents(selectedCalendarEvent.group_id).then((x) => {\n\n                setSelectedCalendarEvent({});\n                setCalendarEventsQueryTrigger(Math.random()); // Math.random is just here to trigger useEffect. Nothing else\n\n            });\n\n            closeEditEventModal()\n\n\n        } else {\n\n            deleteEvent(event)\n            closeEditEventModal()\n        }\n\n    }\n\n\n    function onChangeTimeZoneLocal(timezone) {\n        setTimeZoneLocal(timezone)\n\n\n\n    }\n\n\n    function localDateHandler(momentObj) {\n        let localDateConvertion = moment(momentObj).format(\"LLLL\");\n        let localDate = moment.tz(localDateConvertion, \"dddd, MMM DD, YYYY h:mm a\", timeZoneLocal.value);\n        let dateOneVal = localDate.clone().tz(timeZoneOne.value);\n        let dateTwoVal = localDate.clone().tz(timeZoneTwo.value);\n        setEventDate(localDate)\n        console.log(eventDate)\n        setDateOne(dateOneVal)\n        setDateTwo(dateTwoVal)\n\n        let startDateIsAheadOfEndDate = moment(localDate).isAfter(repeatEventUntil);\n        // \n\n        if (startDateIsAheadOfEndDate) {\n            setRepeatEventUntil(localDate)\n        }\n\n\n    }\n\n\n    function onChangeTimeZoneOne(timezone) {\n        setTimeZoneOne(timezone);\n\n    }\n\n\n    function dateOneHandler(momentObj) {\n        let mainConvertion = moment(momentObj).format(\"LLLL\");\n        let main = moment.tz(mainConvertion, \"dddd, MMM DD, YYYY h:mm a\", timeZoneOne.value);\n        let eventDate = main.clone().tz(timeZoneLocal.value);\n        let dateTwo = main.clone().tz(timeZoneTwo.value);\n        setDateOne(main);\n        setEventDate(eventDate);\n        setDateTwo(dateTwo);\n    }\n\n\n    function onChangeTimeZoneTwo(timezone) {\n        setTimeZoneTwo(timezone)\n    }\n\n\n\n    function dateTwoHandler(momentObj) {\n        let mainConvertion = moment(momentObj).format(\"LLLL\");\n        let main = moment.tz(mainConvertion, \"dddd, MMM DD, YYYY h:mm a\", timeZoneTwo.value);\n        let eventDate = main.clone().tz(timeZoneLocal.value);\n        let dateOne = main.clone().tz(timeZoneOne.value);\n        setDateTwo(main)\n        setEventDate(eventDate)\n        setDateOne(dateOne)\n\n\n    }\n\n\n    function setEndDate(eventDateEnd) {\n        let endDateIsBeforeStartDate = moment(eventDateEnd).isBefore(eventDate);\n        // \n\n        if (endDateIsBeforeStartDate) {\n            alert(\"end date can not be before start date\")\n        } else {\n            setRepeatEventUntil(eventDateEnd)\n        }\n    }\n\n\n    // function redirectToWorkflows(val){\n    //    window.location.href = `/client/${val.id}/client-name/${val.name}/workflows`\n\n    // }\n\n    function onBodyDescriptionChange(val) {\n\n        setEventDescription(val);\n\n    }\n\n\n\n\n    return (\n\n        <div className={classes.root}>\n        <div className={classes.calendarContainer}>\n          <Grid container spacing={4}>\n            <Grid item xs={12}>\n                   <div className = {classes.clientTitleContainer}>\n                  <h1 className=\"logoFontContainerDashboard\">\n                          Workflow Magic\n                      </h1>\n                        <h1 className=\"clientFontContainer\">\n                            {decodeURI(clientName)}\n                      </h1>\n                       </div>\n            <p className = {classes.instructions}>To add an event to the calendar, simply select a date.</p>\n              </Grid>\n                <Grid item xs={12}>\n\n               {/* <Grid item xs={12} sm={12} md={6} xl={6}> */}\n\n\n                <h2 className = {classes.description}>Calendar</h2>\n                  <BigCalendar\n                        selectable\n                        onSelectEvent = {(a,b)=>selectEventHandler(a,b)}\n                        localizer={localizer}\n                        defaultDate={new Date()}\n                        defaultView=\"month\"\n                        events={calendarEventsList}\n                        style={{ height: \"50vh\",position:\"relative\"}}\n                        onSelectSlot={(data)=>{ openCreateEventModal(data)}}\n\n                  />\n\n\n                </Grid>\n              <Grid item xs={12} sm={12} md={6} xl={6}>\n\n\n            {/* <h2 className = {classes.description}>Client List</h2> */}\n\n          <div className = {classes.selectorParent}>\n          \n      \n\n         </div>\n              <CreateEventModal \n                open={modalOpenCreateEvent} \n                onClose={closeCreateEventModal} \n\n                eventTitle={eventTitle}\n                setEventTitle = {setEventTitleHandler}\n\n                //_____________________________________________________________\n                eventDate={eventDate} \n                localDateHandler = {localDateHandler}\n                timeZoneLocal = {timeZoneLocal}\n                onChangeTimeZoneLocal = {onChangeTimeZoneLocal}\n\n                //______________________________________________________________\n                dateOne = {dateOne}\n                dateOneHandler = {dateOneHandler}\n                timeZoneOne = {timeZoneOne}\n                onChangeTimeZoneOne= {onChangeTimeZoneOne}\n\n\n                //______________________________________________________________\n                dateTwo = {dateTwo}\n                dateTwoHandler = {dateTwoHandler}\n                onChangeTimeZoneTwo= {onChangeTimeZoneTwo}\n                timeZoneTwo = {timeZoneTwo}\n\n\n                //______________________________________________________________\n                setRepeatEventUntil = {(e)=>setEndDate(e)}\n                repeatEventUntil={repeatEventUntil}\n                clearDateRepeat={clearDateRepeat}\n                repeatDaily = {repeatDaily}\n                setRepeatDaily = {(e)=> setRepeatDaily(e)}\n                repeatWeekly = {repeatWeekly}\n                setRepeatWeekly ={(e)=> setRepeatWeekly(e)}\n                repeatMonthly = {repeatMonthly}\n                setRepeatMonthly ={(e)=> setRepeatMonthly(e)}\n\n                submitDate = {submitDate}\n\n\n                //______________________________________________________________\n                onBodyDescriptionChange = {onBodyDescriptionChange}\n                bodyDescriptionValue = {eventDescription}\n                //______________________________________________________________\n                selectedClient = {selectedClient}\n\n              />\n\n\n\n              <EditEventModal \n                open={modalOpenEditEvent} \n                onClose={closeEditEventModal} \n                deleteEvent = {deleteEvent}\n                eventData = {selectedCalendarEvent}\n                deleteEventAndGroup = {deleteEventAndGroup}\n              />\n\n\n\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    );\n}\n\n\nCalendar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Calendar);\n\n\n\n\n\n\n/*\n\n set all inputs.\n on each inpout run a useEffect to calculate conversions\n\n*/\n\n\n\n\n\n\n\n/*______________________________\n\n\n openCreateEventModal\n\n Listen for eventDate change in a useEffect.\n in the useEffect set dateOne and dateTwo\n\n\n\n\n\n\n\n\n@itinerary\n\nTIMEZONE conversion:  https://www.npmjs.com/package/select-timezone-material-ui\n\nSet workflow placeholder text to be larger:      font-size: 3.3vmin;\n\nCREATE repeatable event entries based on day & month\n\n@IMPORTANT TODO:   when deleting clients, make sure to destroy all workflows and Calendar events!\n\n\n\n\n\nSHOW ONLY: show only feature for client events\n\n\nINSTANT SEARCH\n\nSAVE/LOAD\n\n\nEMAIL notification API\n\nBEGIN new app for invoicing\n\n_______________________________________\n\n\n\n\n\nTake convas screen shot to convert to pdf\nhttps://blog.risingstack.com/pdf-from-html-node-js-puppeteer/\n\nhttps://stackblitz.com/edit/react-4798tj\n\nhttps://medium.com/@shivekkhurana/how-to-create-pdfs-from-react-components-client-side-solution-7f506d9dfa6d\n\nhttps://html2canvas.hertzen.com/\n\n*/"]},"metadata":{},"sourceType":"module"}