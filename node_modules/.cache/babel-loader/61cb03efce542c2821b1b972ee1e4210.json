{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar wobble_1 = require(\"wobble\");\n\nvar popcorn_1 = require(\"@popmotion/popcorn\");\n\nvar util_1 = require(\"./util\");\n\nvar resetTranslate = {\n  translateX: 0,\n  translateY: 0,\n  scaleX: 1,\n  scaleY: 1\n};\nvar ease = popcorn_1.cubicBezier(0.9, 0.9, 0.37, 0.98);\nvar easeRev = popcorn_1.reversed(ease);\nvar easeInOut = popcorn_1.cubicBezier(0.5, 0.5, 0, 1);\nvar delaysRatio = 0.1;\nvar halfClampEnd = util_1.clamp(1 - delaysRatio, 1);\nvar halfClampStart = util_1.clamp(0, delaysRatio);\n\nvar easeFast = function easeFast(x) {\n  return easeInOut(Number(popcorn_1.interpolate([1 - delaysRatio, 1], [0, 1])(halfClampEnd(x))));\n};\n\nvar easeSlow = function easeSlow(x) {\n  return easeInOut(Number(popcorn_1.interpolate([0, delaysRatio], [0, 1])(halfClampStart(x))));\n};\n\nfunction morphTransition(_a) {\n  var from = _a.from,\n      to = _a.to,\n      rectFrom = _a.rectFrom,\n      rectTo = _a.rectTo,\n      _b = _a.fromValue,\n      fromValue = _b === void 0 ? 0 : _b,\n      initialVelocity = _a.initialVelocity,\n      _c = _a.onUpdate,\n      onUpdate = _c === void 0 ? function () {} : _c,\n      _d = _a.onStart,\n      onStart = _d === void 0 ? function () {} : _d,\n      _e = _a.onStop,\n      onStop = _e === void 0 ? function () {} : _e,\n      willBack = _a.willBack,\n      options = _a.options;\n  var spring = new wobble_1.Spring(__assign({\n    fromValue: fromValue,\n    initialVelocity: initialVelocity,\n    toValue: 1\n  }, options.spring));\n  var fromDiffStyle = util_1.diffRect(rectFrom, rectTo);\n  var toDiffStyle = util_1.diffRect(rectTo, rectFrom);\n  var fromContainer = util_1.cloneElement(from, options);\n  var toContainer = util_1.cloneElement(to, options); // hideInnerMorph(toContainer);\n  // hideInnerMorph(fromContainer);\n\n  to.style.visibility = 'hidden';\n  to.style.pointerEvents = 'none';\n  from.style.visibility = 'hidden';\n  from.style.pointerEvents = 'none';\n  util_1.applyOverlayStyle(toContainer, rectTo);\n  util_1.applyOverlayStyle(fromContainer, rectFrom);\n  var toFLIP = util_1.interpolateObject(fromDiffStyle, resetTranslate, options);\n  var fromFLIP = util_1.interpolateObject(resetTranslate, toDiffStyle, options);\n  var toFade = util_1.lerp(0, 1, true);\n  var fromFade = util_1.lerp(1, 0, true);\n  var isDeleted = false;\n\n  var onProgress = function onProgress(p) {\n    switch (options.type) {\n      case 'morph':\n      default:\n        toContainer.style.opacity = String(toFade(ease(p)));\n        fromContainer.style.opacity = String(fromFade(easeRev(p)));\n        toContainer.style.transform = util_1.getTransformString(toFLIP(p));\n        fromContainer.style.transform = util_1.getTransformString(fromFLIP(p));\n    }\n  };\n\n  spring.onStart(onStart).onUpdate(function (s) {\n    var p = s.currentValue;\n    onProgress(p);\n    onUpdate(s);\n  }).onStop(function (s) {\n    if (s.currentValue === 0 || s.currentValue === 1) {\n      onStop(s);\n      cleanup();\n    }\n  });\n\n  if (typeof options.progress === 'undefined') {\n    spring.start();\n  } else {\n    onProgress(options.progress);\n  }\n\n  var setProgress = function setProgress(progress) {\n    onProgress(progress);\n\n    if (progress === 0 || progress === 1) {\n      onStop(null); // cleanup();\n    }\n  };\n\n  var cleanup = function cleanup() {\n    if (isDeleted) return;\n\n    if (options.portalElement) {\n      options.portalElement.removeChild(toContainer);\n      options.portalElement.removeChild(fromContainer);\n    }\n\n    to.style.visibility = ''; // show original to\n\n    to.style.pointerEvents = ''; // show original to\n\n    if (!willBack) {\n      // show original from\n      from.style.pointerEvents = '';\n      from.style.visibility = '';\n    }\n\n    isDeleted = true;\n  };\n\n  return {\n    cleanup: cleanup,\n    setProgress: setProgress\n  };\n}\n\nexports.default = morphTransition;","map":null,"metadata":{},"sourceType":"script"}