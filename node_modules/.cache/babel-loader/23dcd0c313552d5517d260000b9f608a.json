{"ast":null,"code":"import _slicedToArray from \"/home/wktdev/Desktop/workflowmagic_splash_page/workflowmagic/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/wktdev/Desktop/workflowmagic_splash_page/workflowmagic/src/PageComponents/Dashboard/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from '@material-ui/core/styles';\nimport dashboardStyle from \"../../PageComponents/Dashboard/style\";\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { restUrlToObject } from '../../helper_functions'; // get client id from URL\n// get name\n// \n\nfunction Dashboard(props) {\n  var _this = this;\n\n  var classes = props.classes;\n\n  var _useState = useState(-1),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedItemViaArrowKeypress = _useState2[0],\n      setSelectedItemViaArrowKeypress = _useState2[1];\n\n  var _useState3 = useState([{\n    title: \"Workflows\",\n    link: \"/workflows\",\n    description: \"Your personalized client documentation\"\n  }, {\n    title: \"Contacts\",\n    description: \"A list of the clients coworkers and customers\",\n    link: \"/contacts\"\n  }, {\n    title: \"Calendar\",\n    description: \"Your calendar to schedule events for the client\",\n    link: \"/calendar\"\n  }]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      items = _useState4[0],\n      setItems = _useState4[1];\n\n  var clientNameDefault = restUrlToObject(window.location.pathname)[\"client-name\"];\n\n  var _useState5 = useState(clientNameDefault),\n      _useState6 = _slicedToArray(_useState5, 2),\n      clientName = _useState6[0],\n      setClientName = _useState6[1]; //____________________________________________\n  // @ Arrow Up/Down selection. \n\n\n  useEffect(function () {\n    function handleKeyPress(event) {\n      if (event.key === \"ArrowDown\") {\n        setSelectedItemViaArrowKeypress(function (prev) {\n          return items.length - 1 === prev ? -1 : prev + 1;\n        });\n      }\n\n      if (event.key === \"ArrowUp\") {\n        setSelectedItemViaArrowKeypress(function (prev) {\n          return -1 === prev ? items.length - 1 : prev - 1;\n        });\n      }\n\n      if (event.key === \"Enter\") {\n        if (selectedItemViaArrowKeypress === -1) {// do nothing\n        } else {\n          window.location.href = window.location.pathname + items[selectedItemViaArrowKeypress][\"link\"];\n        }\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyPress);\n    return function () {\n      document.removeEventListener('keydown', handleKeyPress);\n    };\n  }, [items, selectedItemViaArrowKeypress]); //____________________________________________\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.interactionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"logoFontContainerDashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 23\n    }\n  }, \"Workflow Magic\"), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"clientFontContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 25\n    }\n  }, decodeURI(clientNameDefault)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 23\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, \"Below is a list of data categories for the client. You can add to, remove from, and search each category. Each item has a description below it. To start organizing your project, select a category. \"), \"  \"), items.map(function (val, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"hr\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"a\", {\n      href: window.location.pathname + val.link,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: selectedItemViaArrowKeypress === index ? classes.clientItemSelected : classes.clientItem,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 34\n      }\n    }, val.title)), /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.description,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, \" - \", val.description));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }\n  })))));\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nvar styles = function styles(theme) {\n  return dashboardStyle(theme);\n};\n\nexport default withStyles(styles)(Dashboard);","map":{"version":3,"sources":["/home/wktdev/Desktop/workflowmagic_splash_page/workflowmagic/src/PageComponents/Dashboard/index.js"],"names":["React","useState","useEffect","PropTypes","withStyles","dashboardStyle","Grid","Button","restUrlToObject","Dashboard","props","classes","selectedItemViaArrowKeypress","setSelectedItemViaArrowKeypress","title","link","description","items","setItems","clientNameDefault","window","location","pathname","clientName","setClientName","handleKeyPress","event","key","prev","length","href","document","addEventListener","removeEventListener","root","container","interactionContainer","decodeURI","map","val","index","clientItemSelected","clientItem","propTypes","object","isRequired","styles","theme"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from '@material-ui/core/styles';\nimport dashboardStyle from \"../../PageComponents/Dashboard/style\"\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport {restUrlToObject} from '../../helper_functions';\n// get client id from URL\n// get name\n// \n\nfunction Dashboard(props){\n\tconst {classes} = props;\n  \n  const [selectedItemViaArrowKeypress,setSelectedItemViaArrowKeypress] = useState(-1);\n\n  const [items, setItems] = useState(\n       [\n         {title:\"Workflows\",link:\"/workflows\", description:\"Your personalized client documentation\"},\n         {title:\"Contacts\",description:\"A list of the clients coworkers and customers\",link:\"/contacts\"},\n         {title:\"Calendar\",description:\"Your calendar to schedule events for the client\",link:\"/calendar\"}\n       ]\n     )\n\n\n\tlet clientNameDefault = restUrlToObject(window.location.pathname)[\"client-name\"];\n\n\n\tconst [clientName,setClientName] = useState(clientNameDefault);\n\n\n\n\n\n  //____________________________________________\n\n     // @ Arrow Up/Down selection. \n  useEffect(() => {\n      function handleKeyPress(event) {\n\n\n          if (event.key === \"ArrowDown\") {\n              setSelectedItemViaArrowKeypress((prev) => {\n\n                  return items.length - 1 === prev ? -1 : prev + 1;\n\n              });\n\n          }\n\n          if (event.key === \"ArrowUp\") {\n\n              setSelectedItemViaArrowKeypress((prev) => {\n\n                  return -1 === prev ? items.length - 1 : prev - 1;\n\n              });\n\n          }\n\n          if (event.key === \"Enter\") {\n\n            if(selectedItemViaArrowKeypress === -1){\n               // do nothing\n            \n            }else{\n                  window.location.href = window.location.pathname + items[selectedItemViaArrowKeypress][\"link\"];\n            }\n\n          }\n\n      }\n\n\n      document.addEventListener('keydown', handleKeyPress)\n      return () => {\n          document.removeEventListener('keydown', handleKeyPress)\n      }\n\n  }, [items, selectedItemViaArrowKeypress]);\n\n\n\n\n\n\n\n\n  //____________________________________________\n\n\treturn (\n               \n      <div className={classes.root}>\n      \n              <div className={classes.container}>\n              \n                  <Grid item xs={12} sm={12}>\n\t\t\t\t            \t<div className={classes.interactionContainer}>\n                      <h1 className=\"logoFontContainerDashboard\">\n                          Workflow Magic\n                      </h1>\n                        <h1 className=\"clientFontContainer\">\n                            {decodeURI(clientNameDefault)}\n                      </h1>\n\n\n                      <div> <p>Below is a list of data categories for the client. You can add to, remove from, and search each category.\n                      Each item has a description below it. To start organizing your project, select a category. </p>  </div>\n\n                    {\n\n                      items.map((val,index)=>{\n                            return (\n                              <div key={index}>\n                              <hr/>\n                                <a href={window.location.pathname + val.link } >\n                                 <div className={ selectedItemViaArrowKeypress === index ? classes.clientItemSelected : classes.clientItem}>{val.title}</div>\n\n                                </a>\n                                <div className={classes.description}> - {val.description}</div>\n                              </div>\n                            )\n                        })\n                    }\n\n                      <div>\n                    </div>          \n                </div>\n                </Grid>\n            </div>\n     \n            \n      </div>\n\n\t)\n}\n\n\nDashboard.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst styles = theme => (dashboardStyle(theme));\nexport default withStyles(styles)(Dashboard);\n\n\n\n"]},"metadata":{},"sourceType":"module"}