{"ast":null,"code":"var _jsxFileName = \"/home/wktdev/Desktop/workflowmagic_splash_page/workflowmagic/src/PageComponents/Navigation/Navbar/index.js\";\nimport React from \"react\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport navbarStyle from \"../../../PageComponents/Navigation/Navbar/style\";\nimport { restUrlToObject } from '../../../helper_functions';\n\nfunction Navbar(props) {\n  function redirectToDashboard() {\n    var url = window.location.pathname.slice(\"\");\n    var dashboardURL = url.split('dashboard/')[0];\n    window.location.href = dashboardURL + \"dashboard\";\n  }\n\n  var clientName = restUrlToObject(window.location.pathname)[\"client-name\"];\n  console.log(clientName);\n  var classes = props.classes;\n  return /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.bgColor,\n    elevation: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 10\n    }\n  }, props.endpointProps.location.pathname !== \"/\" ? /*#__PURE__*/React.createElement(Button, {\n    className: classes.navButton,\n    color: \"inherit\",\n    onClick: props.redirectToClientsList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 63\n    }\n  }, \"Clients\") : null, props.endpointProps.location.pathname !== \"/calendar\" ? /*#__PURE__*/React.createElement(Button, {\n    className: classes.navButton,\n    color: \"inherit\",\n    onClick: props.redirectToCalendar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 71\n    }\n  }, \"Full Calendar\") : null, props.endpointProps.location.pathname !== \"/save-and-load\" ? /*#__PURE__*/React.createElement(Button, {\n    className: classes.saveDataButton,\n    onClick: props.redirectToSaveAndLoad,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 77\n    }\n  }, /*#__PURE__*/React.createElement(SaveIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 161\n    }\n  })) : null, /*#__PURE__*/React.createElement(Grid, {\n    justify: \"space-between\" // Add it here :)\n    ,\n    container: true,\n    spacing: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, window.location.pathname.includes(\"dashboard/\") ? /*#__PURE__*/React.createElement(Button, {\n    color: \"grey\",\n    onClick: redirectToDashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 64\n    }\n  }, \"Dashboard for  \", decodeURI(clientName)) : null, props.endpointProps.location.pathname !== \"/authentication\" ? /*#__PURE__*/React.createElement(Button, {\n    color: \"grey\",\n    onClick: props.redirectToAuthentication,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 78\n    }\n  }, \"Sign-up/Sign-in\") : null, props.endpointProps.location.pathname !== \"/apps\" ? /*#__PURE__*/React.createElement(Button, {\n    color: \"grey\",\n    onClick: props.redirectToAuthentication,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 68\n    }\n  }, \"Apps\") : null)))));\n}\n\nNavbar.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nvar styles = function styles(theme) {\n  return navbarStyle(theme);\n};\n\nexport default withStyles(styles)(Navbar);","map":{"version":3,"sources":["/home/wktdev/Desktop/workflowmagic_splash_page/workflowmagic/src/PageComponents/Navigation/Navbar/index.js"],"names":["React","AppBar","Toolbar","Button","SaveIcon","Grid","PropTypes","withStyles","navbarStyle","restUrlToObject","Navbar","props","redirectToDashboard","url","window","location","pathname","slice","dashboardURL","split","href","clientName","console","log","classes","bgColor","endpointProps","navButton","redirectToClientsList","redirectToCalendar","saveDataButton","redirectToSaveAndLoad","includes","decodeURI","redirectToAuthentication","propTypes","object","isRequired","styles","theme"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Grid from \"@material-ui/core/Grid\";\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport navbarStyle from \"../../../PageComponents/Navigation/Navbar/style\";\nimport {restUrlToObject} from '../../../helper_functions';\n\nfunction Navbar(props){\n\n \n\n\n  function redirectToDashboard() {\n      let url = window.location.pathname.slice(\"\");\n      let dashboardURL = url.split('dashboard/')[0];\n      window.location.href = dashboardURL +\"dashboard\";\n  }\n\n  let clientName = restUrlToObject(window.location.pathname)[\"client-name\"];\n\n  console.log(clientName)\n\n\tconst {classes} = props;\n\treturn (\n\n\n          <AppBar className={classes.bgColor} elevation={0}>\n\t        <Toolbar>\n\t           \n            {(props.endpointProps.location.pathname !== \"/\" ? <Button className = {classes.navButton} color=\"inherit\" onClick ={props.redirectToClientsList}>Clients</Button>  : null)}\n\t          {(props.endpointProps.location.pathname  !== \"/calendar\" ? <Button className = {classes.navButton}  color=\"inherit\" onClick ={props.redirectToCalendar}>Full Calendar</Button> : null)}\n            {(props.endpointProps.location.pathname  !== \"/save-and-load\" ? <Button className = {classes.saveDataButton} onClick ={props.redirectToSaveAndLoad}><SaveIcon/></Button> : null)}\n\n        <Grid\n          justify=\"space-between\" // Add it here :)\n          container \n          spacing={24}\n        >\n        <Grid item>\n     \n        </Grid>\n\n      <Grid item>\n        <div>\n           {(window.location.pathname.includes(\"dashboard/\") ? <Button color=\"grey\" onClick ={redirectToDashboard}>Dashboard for  {decodeURI(clientName)}</Button> : null)}\n\n       \n            {(props.endpointProps.location.pathname  !== \"/authentication\" ? <Button color=\"grey\" onClick ={props.redirectToAuthentication}>Sign-up/Sign-in</Button> : null)}\n            {(props.endpointProps.location.pathname  !== \"/apps\" ? <Button color=\"grey\" onClick ={props.redirectToAuthentication}>Apps</Button> : null)}\n\n        </div>\n      </Grid>\n    </Grid>\n\n\t        </Toolbar>\n\t      </AppBar>\n\t)\n}\n\nNavbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => (navbarStyle(theme));\nexport default withStyles(styles)(Navbar);\n\n\n\n"]},"metadata":{},"sourceType":"module"}